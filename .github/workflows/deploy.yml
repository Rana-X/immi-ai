name: Deploy to Railway

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  deploy-backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install Railway CLI
      run: npm install -g @railway/cli
        
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Run Tests
      run: |
        python -m pytest
      env:
        PINECONE_API_KEY: ${{ secrets.PINECONE_API_KEY }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        
    - name: Deploy to Railway
      run: railway up
      env:
        RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
        
  deploy-frontend:
    needs: deploy-backend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
        
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: './frontend/package-lock.json'
        
    - name: Install Railway CLI
      run: npm install -g @railway/cli

    # Cache node_modules
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
        
    - name: Install Dependencies
      run: npm ci
        
    - name: Lint Check
      run: npm run lint
      
    - name: Type Check
      run: npx tsc --noEmit
      
    - name: Run Tests
      run: npm test
      env:
        NEXT_PUBLIC_API_URL: ${{ secrets.BACKEND_URL }}
        
    - name: Build
      run: npm run build
      env:
        NEXT_PUBLIC_API_URL: ${{ secrets.BACKEND_URL }}
        
    # Analyze bundle size
    - name: Analyze Bundle
      run: npx next bundle-analyzer
        
    - name: Deploy to Railway
      run: railway up
      env:
        RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
        NODE_ENV: production
        
    # Notify on deployment status
    - name: Notify Success
      if: success()
      run: |
        echo "Frontend deployment successful!"
        # Add notification logic (e.g., Slack, Discord, etc.)
        
    - name: Notify Failure
      if: failure()
      run: |
        echo "Frontend deployment failed!"
        # Add notification logic 